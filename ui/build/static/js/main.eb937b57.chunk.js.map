{"version":3,"sources":["Layout.js","CPUChartJS.js","CPUChartAdapter.js","NETChartJS.js","NETChartAdapter.js","Summary.js","Systemd.js","Logs.js","App.js","index.js"],"names":["mytheme","createMuiTheme","palette","primary","main","secondary","MIcon","name","ListItemIcon","Layout","io","children","go","page","useState","openmenu","setOpenmenu","showmenu","setShowmenu","menu","setMenu","useEffect","on","data","off","CssBaseline","ThemeProvider","theme","Drawer","open","onClose","variant","MenuList","style","width","Object","keys","filter","k","enable","map","MenuItem","key","selected","onClick","Typography","label","AppBar","position","Toolbar","IconButton","edge","color","aria-label","marginRight","spacing","className","Box","p","undefined","chart","setChart","canvas","useRef","datasets","update","current","Chart","type","backgroundColor","borderColor","borderWidth","options","legend","display","animation","scales","yAxes","ticks","beginAtZero","suggestedMin","suggestedMax","xAxes","time","unit","ref","height","setData","msg","e","x","Date","date","y","currentload","Card","CardHeader","avatar","title","subheader","length","Math","round","CardContent","CPUChartJS","rx","tx","fill","lineTension","pb","require","setCurrent","dt","ret","i","rx_sec","tx_sec","NETChartJS","Info","value","TableRow","TableCell","SkeletonLine","Skeleton","Summary","Table","TableBody","system","manufacturer","model","cpu","brand","physicalCores","speed","mem","total","free","uuid","osInfo","distro","release","arch","kernel","hostname","moment","duration","uptime","humanize","columns","selectableRows","onRowClick","row","console","log","emit","error","setError","Alert","severity","AlertTitle","TableContainer","toString","MESSAGE","Login","username","setUsername","password","setPassword","Dialog","Avatar","alt","src","List","ListItem","TextField","required","id","onChange","target","autoComplete","Button","Page","Grid","item","xs","md","Systemd","Logs","container","CPUChartAdapter","NETChartAdapter","App","setIo","login","setLogin","ii","iocli","query","token","localStorage","getItem","sid","setItem","err","justify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb937b57.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"fontsource-roboto\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport \"./cursor.css\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport ImportContactsIcon from \"@material-ui/icons/ImportContacts\";\n\nconst mytheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#cacaca\",\n    },\n    secondary: {\n      main: \"#01579b\",\n    },\n  },\n});\n\nfunction MIcon({ name }) {\n  switch (name) {\n    case \"logs\":\n      return (\n        <ListItemIcon>\n          <ImportContactsIcon />\n        </ListItemIcon>\n      );\n    case \"systemd\":\n      return (\n        <ListItemIcon>\n          <BuildIcon />\n        </ListItemIcon>\n      );\n    default:\n      return (\n        <ListItemIcon>\n          <InfoIcon />\n        </ListItemIcon>\n      );\n  }\n}\n\nfunction Layout({ io, children, go, page }) {\n  const [openmenu, setOpenmenu] = useState(false);\n  const [showmenu, setShowmenu] = useState(false);\n  const [menu, setMenu] = useState({});\n\n  useEffect(() => {\n    if (io) {\n      io.on(\"menu\", (data) => {\n        setMenu(data);\n        setShowmenu(true);\n      });\n      return function () {\n        io.off(\"menu\");\n      };\n    }\n  }, [io]);\n  return (\n    <>\n      <CssBaseline />\n      <ThemeProvider theme={mytheme}>\n        {showmenu && (\n          <Drawer\n            open={openmenu}\n            onClose={() => setOpenmenu(false)}\n            variant=\"temporary\"\n          >\n            <MenuList style={{ width: \"300px\" }}>\n              {Object.keys(menu)\n                .filter((k) => menu[k].enable)\n                .map((k) => (\n                  <MenuItem\n                    key={k}\n                    selected={page === k}\n                    onClick={() => {\n                      go(k);\n                      setOpenmenu(false);\n                    }}\n                  >\n                    <MIcon name={k} />\n                    <Typography variant=\"inherit\">{menu[k].label}</Typography>\n                  </MenuItem>\n                ))}\n            </MenuList>\n          </Drawer>\n        )}\n        <AppBar position=\"static\" variant=\"elevation\">\n          <Toolbar>\n            {showmenu && (\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => {\n                  setOpenmenu(true);\n                }}\n                style={{ marginRight: mytheme.spacing(2) }}\n              >\n                <MenuIcon />\n              </IconButton>\n            )}\n            <Typography variant=\"h6\">\n              <span>OS Admin</span>\n              <span className=\"blinking-cursor\">▋</span>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Box p={2}>{children}</Box>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default Layout;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function ({ data }) {\n  const [chart, setChart] = useState(undefined);\n  const canvas = useRef(null);\n\n  useEffect(() => {\n    if (chart) {\n      chart.data.datasets[0].data = data;\n      chart.update();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (canvas.current) {\n      setChart(\n        new Chart(canvas.current, {\n          type: \"bar\",\n          data: {\n            datasets: [\n              {\n                label: \"CPU %\",\n                data: data,\n                backgroundColor: \"rgba(54, 162, 235,0.5 )\",\n                borderColor: \"rgba(54, 162, 235, 0.8)\",\n                borderWidth: 1,\n              },\n            ],\n          },\n          options: {\n            legend: {\n              display: false,\n            },\n            animation: false,\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                    suggestedMin: 0,\n                    suggestedMax: 100,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  type: \"time\",\n                  time: {\n                    unit: \"minute\",\n                  },\n                },\n              ],\n            },\n          },\n        })\n      );\n    }\n  }, [canvas]);\n  return <canvas ref={canvas} width=\"400\" height=\"100\"></canvas>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport CPUChartJS from \"./CPUChartJS\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ComputerIcon from \"@material-ui/icons/Computer\";\n\nexport default function ({ io }) {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    io.on(\"cpustat\", (msg) => {\n      setData(\n        msg.map((e) => {\n          return {\n            x: new Date(e.date), //\"\" + msg.date.split(\"T\")[1].split(\".\")[0],\n            y: e.currentload,\n          };\n        })\n      );\n    });\n    return function () {\n      io.off(\"cpustat\");\n    };\n  }, [io]);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={<ComputerIcon />}\n        title=\"CPU utilization\"\n        subheader={data && data.length > 0 ? Math.round(data[0].y) + \"%\" : \"\"}\n      />\n      <CardContent style={{ height: \"auto\" }}>\n        <CPUChartJS data={data} />\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function ({ data }) {\n  const [chart, setChart] = useState(undefined);\n  const canvas = useRef(null);\n\n  useEffect(() => {\n    if (chart) {\n      chart.data.datasets[0].data = data.map((e) => {\n        return { x: e.x, y: e.rx };\n      });\n      chart.data.datasets[1].data = data.map((e) => {\n        return { x: e.x, y: e.tx };\n      });\n      chart.update();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (canvas.current) {\n      setChart(\n        new Chart(canvas.current, {\n          type: \"line\",\n          data: {\n            datasets: [\n              {\n                label: \"rx\",\n                data: [],\n                backgroundColor: \"rgba(54, 162, 235,0.5 )\",\n                fill: false,\n                lineTension: 0,\n                //borderColor: \"rgba(54, 162, 235, 0.8)\",\n                //borderWidth: 1,\n              },\n              {\n                label: \"tx\",\n                data: [],\n                backgroundColor: \"rgba(54, 0, 235,0.5 )\",\n                fill: false,\n                lineTension: 0,\n                //borderColor: \"rgba(54, 0, 235, 0.8)\",\n                //borderWidth: 1,\n              },\n            ],\n          },\n          options: {\n            legend: {\n              display: false,\n            },\n            animation: false,\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                    suggestedMin: 0,\n                    suggestedMax: 100,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  type: \"time\",\n                  time: {\n                    unit: \"minute\",\n                  },\n                },\n              ],\n            },\n          },\n        })\n      );\n    }\n  }, [canvas]);\n  return <canvas ref={canvas} width=\"400\" height=\"100\"></canvas>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport NETChartJS from \"./NETChartJS\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport RouterIcon from \"@material-ui/icons/Router\";\nconst pb = require(\"pretty-bytes\");\n\nexport default function ({ io }) {\n  const [data, setData] = useState([]);\n  const [current, setCurrent] = useState(undefined);\n  useEffect(() => {\n    if (io) {\n      io.on(\"netstat\", (msg) => {\n        const dt = msg.map((e) => {\n          const ret = { x: e.date, rx: 0, tx: 0 }; //sum:{rx_sec:0,tx_sec:0} };\n\n          for (var i = 0; i < e.data.length; i++) {\n            //ret[`y${i == 0 ? \"\" : i - 1}`] = e.data[i].rx_sec;\n            ret.rx += e.data[i].rx_sec;\n            ret.tx += e.data[i].tx_sec;\n          }\n\n          return ret;\n        });\n        setData(dt);\n        setCurrent(dt[0]);\n      });\n      return function () {\n        io.off(\"netstat\");\n      };\n    }\n  }, [io]);\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={<RouterIcon />}\n        title=\"Network utilization\"\n        subheader={current ? `RX/TX ↓${pb(current.rx)}/↑${pb(current.tx)}` : \"\"}\n      />\n      <CardContent style={{ height: \"auto\" }}>\n        <NETChartJS data={data} />\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nimport moment from \"moment\";\nconst pb = require(\"pretty-bytes\");\n\nfunction Info({ name, value }) {\n  return (\n    <TableRow key={name}>\n      <TableCell>{name}</TableCell>\n      <TableCell>{value}</TableCell>\n    </TableRow>\n  );\n}\n\nfunction SkeletonLine({ name }) {\n  return (\n    <TableRow key={name}>\n      <TableCell width={\"20%\"}>\n        <Skeleton />\n      </TableCell>\n      <TableCell>\n        <Skeleton />\n      </TableCell>\n    </TableRow>\n  );\n}\n\nfunction Summary({ io }) {\n  const [data, setData] = useState(undefined);\n\n  useEffect(() => {\n    io.on(\"summary\", (msg) => {\n      setData(msg);\n    });\n    return function () {\n      io.off(\"summary\");\n    };\n  }, []);\n  return (\n    <Table>\n      <TableBody>\n        {data ? (\n          <Info\n            name=\"Hardware\"\n            value={`${data.system.manufacturer} ${data.system.model}`}\n          />\n        ) : (\n          <SkeletonLine name=\"Hardware\" />\n        )}\n        {data ? (\n          <Info\n            name=\"CPU\"\n            value={`${data.cpu.manufacturer} ${data.cpu.brand} ${data.cpu.physicalCores}x${data.cpu.speed}MHz`}\n          />\n        ) : (\n          <SkeletonLine name=\"CPU\" />\n        )}\n        {data ? (\n          <Info\n            name=\"Memory\"\n            value={`${pb(data.mem.total)}/${pb(data.mem.free)}`}\n          />\n        ) : (\n          <SkeletonLine name=\"Memory\" />\n        )}\n        {data ? (\n          <Info name=\"Machine ID\" value={`${data.system.uuid}`} />\n        ) : (\n          <SkeletonLine name=\"Machine ID\" />\n        )}\n        {data ? (\n          <Info\n            name=\"OS\"\n            value={`${data.osInfo.distro} ${data.osInfo.release} ${data.osInfo.arch} kernel ${data.osInfo.kernel}`}\n          />\n        ) : (\n          <SkeletonLine name=\"OS\" />\n        )}\n        {data ? (\n          <Info name=\"Hostname\" value={`${data.osInfo.hostname}`} />\n        ) : (\n          <SkeletonLine name=\"Hostname\" />\n        )}\n        {data ? (\n          <Info name=\"System time\" value={`${moment(data.time.current)}`} />\n        ) : (\n          <SkeletonLine name=\"System time\" />\n        )}\n        {data ? (\n          <Info\n            name=\"Uptime\"\n            value={`${moment\n              .duration(data.time.uptime, \"seconds\")\n              .humanize(true)}`}\n          />\n        ) : (\n          <SkeletonLine name=\"Uptime\" />\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n\nexport default Summary;\n","import React, { useState, useEffect } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\n\nconst columns = [\n  { label: \"Name\" },\n  { label: \"Description\" },\n  { label: \"Load state\" },\n  { label: \"Active state\" },\n  { label: \"Sub state\", options: { display: \"false\" } },\n  { label: \"Unit flow\", options: { display: \"false\" } },\n  { label: \"Unit path\", options: { display: \"false\" } },\n  { label: \"Job\", options: { display: \"false\" } },\n  { label: \"Job type\", options: { display: \"false\" } },\n  { label: \"Job path\", options: { display: \"false\" } },\n];\n\nconst options = {\n  selectableRows: \"none\",\n  onRowClick: (row) => {\n    console.log(row);\n  },\n};\n\nexport default function ({ io }) {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (io) {\n      io.emit(\"getsystemctl\");\n      io.on(\"systemctl\", (dt) => {\n        setData(dt);\n      });\n\n      return function () {\n        io.off(\"systemctl\");\n      };\n    }\n  }, [io]);\n  return (\n    <MUIDataTable\n      title={`Systemd services`}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport moment from \"moment\";\n\nexport default function ({ io }) {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    if (io) {\n      io.on(\"log\", (dt) => {\n        console.log(\"data\");\n        if (dt.error) {\n          setError(dt.error);\n        } else {\n          setData(dt);\n        }\n      });\n    }\n    return function () {\n      io.off(\"log\");\n    };\n  }, [io]);\n\n  useEffect(() => {\n    io.emit(\"getlog\");\n  }, []);\n  if (error) {\n    return (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        {error}\n      </Alert>\n    );\n  } else {\n    return (\n      <TableContainer>\n        <Table aria-label=\"simple table\">\n          <TableBody>\n            {data.map((row) => (\n              <TableRow key={row[\"__MONOTONIC_TIMESTAMP\"]}>\n                <TableCell>\n                  {moment(row[\"__MONOTONIC_TIMESTAMP\"]).toString()}\n                </TableCell>\n                <TableCell>{row.MESSAGE}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CPUChartAdapter from \"./CPUChartAdapter\";\nimport NETChartAdapter from \"./NETChartAdapter\";\nimport Summary from \"./Summary\";\nimport Systemd from \"./Systemd\";\nimport Logs from \"./Logs\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport iocli from \"socket.io-client\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nfunction Login({ io }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <Dialog open={true}>\n      {/*<DialogTitle>*/}\n      <Toolbar variant=\"dense\">\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n          <Avatar alt=\"OSAdmin\" src=\"/android-chrome-512x512.png\" />\n        </IconButton>\n        <Typography variant=\"h6\">Login</Typography>\n      </Toolbar>\n      {/*</DialogTitle>*/}\n      <List>\n        <ListItem>\n          <TextField\n            required\n            id=\"standard-required\"\n            label=\"Username\"\n            value={username}\n            onChange={(e) => {\n              setUsername(e.target.value);\n            }}\n          />\n        </ListItem>\n        <ListItem>\n          <TextField\n            id=\"standard-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </ListItem>\n        <ListItem>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            style={{ width: \"100%\" }}\n            onClick={() => {\n              io.emit(\"login\", { username: username, password: password });\n            }}\n          >\n            Login\n          </Button>\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nfunction Page({ io, page }) {\n  switch (page) {\n    case \"systemd\":\n      return (\n        <Grid item xs={12} md={12}>\n          <Systemd io={io} />\n        </Grid>\n      );\n    case \"logs\":\n      return (\n        <Grid item xs={12} md={12}>\n          <Logs io={io} />\n        </Grid>\n      );\n    default:\n      return (\n        <>\n          <Grid item xs={12} md={6}>\n            <Grid container>{io && <Summary io={io} />}</Grid>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={12}>\n                {io && <CPUChartAdapter io={io} />}\n              </Grid>\n              <Grid item xs={12} md={12}>\n                {io && <NETChartAdapter io={io} />}\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n      );\n  }\n}\n\nfunction App() {\n  const [io, setIo] = useState(undefined);\n  const [login, setLogin] = useState(false);\n  const [page, go] = useState(\"summary\");\n\n  useEffect(() => {\n    const ii = iocli(\n      !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n        ? \"http://192.168.7.5:3001\"\n        : \"/\",\n      {\n        query: {\n          token: localStorage.getItem(\"sid\"),\n        },\n      }\n    );\n\n    ii.on(\"loggedin\", (sid) => {\n      localStorage.setItem(\"sid\", sid);\n      setLogin(true);\n    });\n    ii.on(\"logoff\", () => {\n      setLogin(false);\n    });\n    ii.on(\"error\", (err) => {\n      console.log(\"ErrRRR\", err);\n      setLogin(false);\n    });\n    ii.on(\"connect_error\", (err) => {\n      console.log(err);\n      //setLogin(false);\n    });\n\n    setIo(ii);\n  }, []);\n\n  if (login) {\n    return (\n      <Layout io={io} go={go} page={page}>\n        <Grid container spacing={2} justify=\"center\">\n          <Page page={page} io={io} />\n        </Grid>\n      </Layout>\n    );\n  } else {\n    return <Login io={io} />;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}